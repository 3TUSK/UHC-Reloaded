plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "maven"
    id "checkstyle"
    id "net.minecrell.licenser" version "0.1.3"
    id "com.github.johnrengelman.shadow" version "1.2.3"
}

allprojects {
    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "maven"
    apply plugin: "checkstyle"
    apply plugin: "net.minecrell.licenser"
    apply plugin: "com.github.johnrengelman.shadow"

    group = 'com.github.liachmodded.uhcreloaded'
    version = '0.1-SNAPSHOT'
    archivesBaseName = rootProject.name + '-' + project.name
    //version = project.version
    
    defaultTasks 'licenseFormat', 'clean', 'build'

    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'

    configurations {
        provided
        compile.extendsFrom shadow
    }

    sourceSets {
        main {
            compileClasspath += configurations.provided
        }
    }

    eclipse {
        classpath {
            plusConfigurations += [configurations.provided]
        }
    }

    idea {
        module {
            scopes.PROVIDED.plus += [configurations.provided]
            inheritOutputDirs = true 
        }
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
    
    javadoc.classpath = sourceSets.main.compileClasspath

    repositories {
        mavenCentral()
    }
    
    checkstyle {
        toolVersion = "6.16.1"
        configProperties = [
                "name"        : project.name,
                "organization": "liachmodded",
                "url"         : "https://github.com/liachmodded/UHC-Reloaded",
                "year"        : "2016",
                "severity"    : 'warning',
                "suppressions": rootProject.file("checkstyle-suppressions.xml")
        ]
        configFile = rootProject.file("checkstyle.xml")
    }
    
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: 'javadoc') {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    
    artifacts {
	    archives sourcesJar
	    archives javadocJar
	}

    license {
        header rootProject.file('LICENSE')
        include '**/*.java'

        style.java = 'BLOCK_COMMENT'
    }
}

subprojects {
    dependencies {
        provided rootProject
    }

    jar {
        from rootProject.sourceSets.main.output
    }

    sourcesJar {
        from rootProject.sourceSets.main.allSource
    }

    javadoc {
        source rootProject.sourceSets.main.java
    }
}

dependencies {
    provided 'com.google.guava:guava:17.0'
    provided 'com.google.code.gson:gson:2.2.4'
    provided 'ninja.leaping.configurate:configurate-hocon:3.1.1'
}

task setup(type: DefaultTask, dependsOn: 'forge:setupDecompWorkspace') {
}
